function tolerancesSensitivitySpecificity = varyTolerances(maxTolerance, hiddenLayers, window_size)

if nargin < 1
    maxTolerance = 10;
end
if nargin < 2
    hiddenLayers = [10,10,10];
end
if nargin < 3
    window_size = 15;
end

for t = 0 : maxTolerance
    sumPerfCountsByClass = crossValidation(0,0,window_size,hiddenLayers,t);
    TP = sumPerfCountsByClass(1);
    TN = sumPerfCountsByClass(2);
    FP = sumPerfCountsByClass(3);
    FN = sumPerfCountsByClass(4);
    average_sensitivity = TP / (TP + FN) * 100
    average_specificity = TN / (FP + TN) * 100
    tolerancesSensitivitySpecificity(t+1,:) = [average_sensitivity, average_specificity];
end

createfigure(0:maxTolerance, tolerancesSensitivitySpecificity);
set(gcf,'PaperPositionMode','auto');
set(gcf,'PaperOrientation','landscape');
set(gcf,'Position',[50 50 1200 800]);
print( strcat('./Graphs/tolerancePerformance'), '-dpdf')

end

function createfigure(Xs1, YMatrix1)
%CREATEFIGURE2(XS1, YMATRIX1)
%  XS1:  vector of x data
%  YMATRIX1:  matrix of y data

%  Auto-generated by MATLAB on 11-Feb-2014 02:59:38

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,'FontSize',12);
%% Uncomment the following line to preserve the X-limits of the axes
% xlim(axes1,[0 10]);
box(axes1,'on');
hold(axes1,'all');

% Create multiple lines using matrix input to plot
plot1 = plot(Xs1,YMatrix1,'Parent',axes1,'LineWidth',3);
set(plot1(1),'DisplayName','Sensitivity');
set(plot1(2),'DisplayName','Specificity');

% Create xlabel
xlabel('Tolerance (± n frames)','FontSize',12);

% Create ylabel
ylabel('Specificity/Sensitivity (%)','FontSize',12);

% Create title
title('Effect On Sensitivity And Specificity As Classification Tolerance Increases',...
    'FontSize',12);

% Create legend
legend1 = legend(axes1,'show');
set(legend1,'FontSize',14);

end