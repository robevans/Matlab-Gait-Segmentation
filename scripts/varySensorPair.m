function varySensorPair(hiddenLayers, window_size, performanceCountsTolerance)
% Script to test performance effects of varying sensor placement.
% Plots sensitivity and specificity for each sensor placement, for each
% phase of the gait.

if nargin < 1
    hiddenLayers = [10,10,10];
end
if nargin < 2
    window_size = 15;
end
if nargin <3
    performanceCountsTolerance = 0;
end

loadAlignedData('caller')

%perfCounts_all_sensors = crossValidation(0,0, window_size, hiddenLayers, performanceCountsTolerance);
%perfCounts_pelvis = crossValidation(0,0, window_size, hiddenLayers, performanceCountsTolerance, pelvisCols);
perfCounts_thigh = crossValidation(0,0, window_size, hiddenLayers, performanceCountsTolerance, upLegCols);
perfCounts_shin = crossValidation(0,0, window_size, hiddenLayers, performanceCountsTolerance, legCols);
perfCounts_foot = crossValidation(0,0, window_size, hiddenLayers, performanceCountsTolerance, feetCols);

%[all_sensitivity, all_specificity] = getSensitivityAndSpecificityForEachClass(perfCounts_all_sensors);
%[pelvis_sensitivity, pelvis_specificity] = getSensitivityAndSpecificityForEachClass(perfCounts_pelvis);
[thigh_sensitivity, thigh_specificity] = getSensitivityAndSpecificityForEachClass(perfCounts_thigh);
[shin_sensitivity, shin_specificity] = getSensitivityAndSpecificityForEachClass(perfCounts_shin);
[foot_sensitivity, foot_specificity] = getSensitivityAndSpecificityForEachClass(perfCounts_foot);

createfigure([all_sensitivity, pelvis_sensitivity, thigh_sensitivity, shin_sensitivity, foot_sensitivity], 'Performance (Sensitivity) of Sensor Placements', 'Sensitivity (%)')
set(gcf,'PaperPositionMode','auto');
set(gcf,'PaperOrientation','landscape');
set(gcf,'Position',[50 50 1200 800]);
print( strcat('./Graphs/sensorPlacementSensitivity'), '-dpdf')
createfigure([all_specificity, pelvis_specificity, thigh_specificity, shin_specificity, foot_specificity], 'Performance (Specificity) of Sensor Placements', 'Specificity (%)')
set(gcf,'PaperPositionMode','auto');
set(gcf,'PaperOrientation','landscape');
set(gcf,'Position',[50 50 1200 800]);
print( strcat('./Graphs/sensorPlacementSpecificity'), '-dpdf')
end

function [classes_sensitivity, classes_specificity] = getSensitivityAndSpecificityForEachClass(sumOfPerformanceCountsByClass)
nClasses = size(sumOfPerformanceCountsByClass,1);
classes_sensitivity = zeros(nClasses, 1);
classes_specificity = zeros(nClasses, 1);
for class = 1 : nClasses
    [classes_sensitivity(class), classes_specificity(class)] = getSensitivityAndSpecificity( sumOfPerformanceCountsByClass(class,:) );
end
end

function createfigure(YMatrix1, titleString, yLabelString)
%CREATEFIGURE1(YMATRIX1)
%  YMATRIX1:  matrix of y data

%  Auto-generated by MATLAB on 11-Feb-2014 20:05:01

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,...
    'XTickLabel',{'Heel Contact','Foot Flat','Heel Lift','Toe Off','Mid swing'},...
    'XTick',[1 2 3 4 5],...
    'FontSize',12);

xlim(axes1,[0.8 5.2]);
box(axes1,'on');
hold(axes1,'all');

% Create multiple lines using matrix input to plot
plot(YMatrix1,'Parent',axes1);

% Create xlabel
xlabel('Gait Phases','FontSize',14);%  Auto-generated by MATLAB on 11-Feb-2014 20:10:39

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,...
    'XTickLabel',{'Heel Contact','Foot Flat','Heel Lift','Toe Off','Mid swing'},...
    'XTick',[1 2 3 4 5],...
    'FontSize',12);
%% Uncomment the following line to preserve the X-limits of the axes
xlim(axes1,[0.8 5.2]);
box(axes1,'on');
hold(axes1,'all');

% Create multiple lines using matrix input to plot
plot1 = plot(YMatrix1,'Parent',axes1);
set(plot1(1),'DisplayName','All');
set(plot1(2),'DisplayName','Pelvis');
set(plot1(3),'DisplayName','Thighs');
set(plot1(4),'DisplayName','Shins');
set(plot1(5),'DisplayName','Feet');

% Create xlabel
xlabel('Gait Phases','FontSize',14);

% Create ylabel
ylabel(yLabelString,'FontSize',14);

% Create title
title(titleString,'FontSize',14);

% Create legend
legend1 = legend(axes1,'show');
set(legend1,'FontSize',14);
end
