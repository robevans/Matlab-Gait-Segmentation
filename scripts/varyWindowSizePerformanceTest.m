function  varyWindowSizePerformanceTest(min_window_size, max_window_size, window_increment_size, hiddenLayers, performanceCountsTolerance)
% Script to test performance of varying window size parameter.

if nargin < 1
    min_window_size = 1;
end
if nargin < 2
    max_window_size = 27;
end
if nargin < 3
    window_increment_size = 15;
end
if nargin < 4
    hiddenLayers = [10,10,10];
end
if nargin < 5
    performanceCountsTolerance = 0;
end

sensitivity_specificity_windows = nan(max_window_size,2);

for window_size = min_window_size : window_increment_size : max_window_size
   performanceCounts = sum(crossValidation(0,0, window_size, hiddenLayers, performanceCountsTolerance));
   [sensitivity, specificity] = getSensitivityAndSpecificity(performanceCounts);
   sensitivity_specificity_windows(window_size, :) = [sensitivity, specificity];
end

createfigure(sensitivity_specificity_windows)
set(gcf,'PaperPositionMode','auto');
set(gcf,'PaperOrientation','landscape');
set(gcf,'Position',[50 50 1200 800]);
print( strcat('./Graphs/windowSizesPerformance'), '-dpdf')

save perf_windows sensitivity_specificity_windows

end

function createfigure(YMatrix1)
%CREATEFIGURE1(YMATRIX1)
%  YMATRIX1:  matrix of y data

%  Auto-generated by MATLAB on 11-Feb-2014 18:48:50

% Create figure
figure1 = figure;

% Create axes
axes1 = axes('Parent',figure1,'FontSize',12);
box(axes1,'on');
hold(axes1,'all');

% Create multiple lines using matrix input to plot
plot1 = plot(YMatrix1,'Parent',axes1,'LineWidth',4);
set(plot1(1),'DisplayName','Sensitivity');
set(plot1(2),'DisplayName','Specificity');

% Create xlabel
xlabel('Window size (frames)','FontSize',14);

% Create ylabel
ylabel('Sensitivity/Specificity (%)','FontSize',14);

% Create title
title('Effect On Specificity And Sensitivity As Neural Network Sliding Window Size Increases',...
    'FontSize',14);

% Create legend
legend1 = legend(axes1,'show');
set(legend1,'FontSize',14);
